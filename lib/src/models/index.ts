/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import * as coreClient from "@azure/core-client";

export interface NotificationHubEntryModel {
  content?: NotificationHubContentModel;
}

export interface NotificationHubContentModel {
  type?: "application/xml";
  notificationHubDescription?: NotificationHubDescriptionModel;
}

export interface NotificationHubDescriptionModel {
  xmlnsI?: "http://www.w3.org/2001/XMLSchema-instance";
  registrationTtl?: string;
  location?: string;
  apnsCredential?: PropertyBagModelItem[];
  gcmCredential?: PropertyBagModelItem[];
  wnsCredential?: PropertyBagModelItem[];
  authorizationRules?: NotificationHubDescriptionModelAuthorizationRulesItem[];
}

export interface PropertyBagModelItem {
  name?: string;
  value?: string;
}

export interface NotificationHubDescriptionModelAuthorizationRulesItem {
  iType?: "http://www.w3.org/2001/XMLSchema-instance";
  claimType?: "SharedAccessAuthorizationRule";
  claimValue?: string;
  rights?: string[];
  createdTime?: string;
  modifiedTime?: string;
  keyName?: string;
  primaryKey?: string;
  secondaryKey?: string;
}

export interface RegistrationEntryModel {
  content?: NotificationHubContentModel;
  xmlnsM?: "http://schemas.microsoft.com/ado/2007/08/dataservices/metadata";
  mEtag?: string;
}

export interface InstallationModel {
  /** Installation Unique Identifier */
  installationId: string;
  /** The user ID for the installation */
  userId?: string;
  /**
   * The date when the installation was made inactivate by the PNS.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly lastActiveOn?: string;
  /**
   * Date in W3C format of last update to this installation.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly lastUpdate?: string;
  /** PNS Platform for the installation */
  platform: PlatformType;
  /** The unique device handle for the PNS. */
  pushChannel: string;
  /**
   * This is true if the PNS expired the channel.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly expiredPushChannel?: boolean;
  /** The tags for the installation for targeting */
  tags?: string[];
  /** Set of named templates associated with the installation. */
  templates?: { [propertyName: string]: InstallationTemplateModel };
  /** Set of secondary tiles associated with the installation. Applies only to the 'wns' platform. */
  secondaryTiles?: { [propertyName: string]: InstallationSecondaryTileModel };
}

export interface InstallationTemplateModel {
  /** Template for the body of the notification. */
  body: string;
  /** Set of named headers associated with the template. Header values can contain template parameters. */
  headers?: { [propertyName: string]: string };
  /** Template expression evaluating in W3D date format. */
  expiry?: string;
  /** The tags for the installation for targeting */
  tags?: string[];
}

export interface InstallationSecondaryTileModel {
  /** ChannelUri for the secondary tile. Applies only to the 'wns' platform. */
  pushChannel: string;
  /** The tags for the installation for targeting */
  tags?: string[];
  /** Set of named templates associated with the secondary tile. Applies only to the 'wns' platform. */
  templates?: { [propertyName: string]: InstallationTemplateModel };
}

export interface InstallationPatchModelItem {
  op: InstallationPatchType;
  path: string;
  value?: string;
}

export interface RegistrationContentModel {
  type?: "application/xml";
  appleRegistrationDescription?: AppleRegistrationContentModel;
  appleTemplateRegistrationDescription?: AppleTemplateRegistrationContentModel;
  baiduRegistrationDescription?: BaiduRegistrationContentModel;
  baiduTemplateRegistrationDescription?: BaiduTemplateRegistrationContentModel;
  gcmRegistrationDescription?: GcmRegistrationContentModel;
  gcmTemplateRegistrationDescription?: GcmTemplateRegistrationContentModel;
  windowsRegistrationDescription?: WindowsRegistrationContentModel;
  windowsTemplateRegistrationDescription?: WindowsTemplateRegistrationContentModel;
}

export interface AppleRegistrationContentModel {
  xmlnsI?: "http://www.w3.org/2001/XMLSchema-instance";
  tags?: string;
  deviceToken: string;
}

export interface AppleTemplateRegistrationContentModel {
  xmlnsI?: "http://www.w3.org/2001/XMLSchema-instance";
  tags?: string;
  deviceToken: string;
  bodyTemplate: string;
  expiry?: string;
}

export interface BaiduRegistrationContentModel {
  xmlnsI?: "http://www.w3.org/2001/XMLSchema-instance";
  tags?: string;
  baiduUserId: string;
  baiduChannelId: string;
}

export interface BaiduTemplateRegistrationContentModel {
  xmlnsI?: "http://www.w3.org/2001/XMLSchema-instance";
  tags?: string;
  baiduUserId: string;
  baiduChannelId: string;
  bodyTemplate: string;
}

export interface GcmRegistrationContentModel {
  xmlnsI?: "http://www.w3.org/2001/XMLSchema-instance";
  tags?: string;
  gcmRegistrationId?: string;
}

export interface GcmTemplateRegistrationContentModel {
  xmlnsI?: "http://www.w3.org/2001/XMLSchema-instance";
  tags?: string;
  gcmRegistrationId: string;
  bodyTemplate: string;
}

export interface WindowsRegistrationContentModel {
  xmlnsI?: "http://www.w3.org/2001/XMLSchema-instance";
  tags?: string;
  channelUri: string;
}

export interface WindowsTemplateRegistrationContentModel {
  xmlnsI?: "http://www.w3.org/2001/XMLSchema-instance";
  tags?: string;
  channelUri: string;
  bodyTemplate: string;
  wnsHeaders?: WindowsTemplateRegistrationContentModelWnsHeadersItem[];
}

export interface WindowsTemplateRegistrationContentModelWnsHeadersItem {
  header?: string;
  value?: string;
}

/** Defines headers for NotificationHubsClient_getRegistrationsByTag operation. */
export interface NotificationHubsClientGetRegistrationsByTagHeaders {
  /** Contains the token to continue the enumeration of registrations, in case there are more. */
  xMSContinuationToken?: string;
}

/** Defines headers for NotificationHubsClient_createRegistrationId operation. */
export interface NotificationHubsClientCreateRegistrationIdHeaders {
  /** The location of the registration in the format: https://{namespace}.servicebus.windows.net/{NotificationHub}/registrations/<registrationId> */
  contentLocation?: string;
  /** Weak ETag */
  eTag?: string;
}

/** Defines headers for NotificationHubsClient_getRegistrations operation. */
export interface NotificationHubsClientGetRegistrationsHeaders {
  /** Contains the token to continue the enumeration of registrations, in case there are more. */
  xMSContinuationToken?: string;
}

/** Defines headers for NotificationHubsClient_createRegistration operation. */
export interface NotificationHubsClientCreateRegistrationHeaders {
  /** Weak ETag */
  eTag?: string;
}

/** Defines headers for NotificationHubsClient_getRegistration operation. */
export interface NotificationHubsClientGetRegistrationHeaders {
  /** Weak ETag */
  eTag?: string;
}

/** Defines headers for NotificationHubsClient_createOrUpdateRegistration operation. */
export interface NotificationHubsClientCreateOrUpdateRegistrationHeaders {
  /** Weak ETag */
  eTag?: string;
}

/** Defines headers for NotificationHubsClient_getInstallation operation. */
export interface NotificationHubsClientGetInstallationHeaders {
  /** The location of the installation in the format: https://{namespace}.servicebus.windows.net/{NotificationHub}/installations/<installationId> */
  contentLocation?: string;
}

/** Defines headers for NotificationHubsClient_sendMessage operation. */
export interface NotificationHubsClientSendMessageHeaders {
  /** This header will contain the Notification Message ID. */
  location?: string;
}

/** Known values of {@link MSApiVersionType} that the service accepts. */
export enum KnownMSApiVersionType {
  TwoThousandFifteen01 = "2015-01",
  TwoThousandFifteen04 = "2015-04",
  TwoThousandFifteen08 = "2015-08",
  TwoThousandSixteen07 = "2016-07"
}

/**
 * Defines values for MSApiVersionType. \
 * {@link KnownMSApiVersionType} can be used interchangeably with MSApiVersionType,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **2015-01** \
 * **2015-04** \
 * **2015-08** \
 * **2016-07**
 */
export type MSApiVersionType = string;

/** Known values of {@link PlatformType} that the service accepts. */
export enum KnownPlatformType {
  Apns = "apns",
  Wns = "wns",
  Gcm = "gcm",
  Baidu = "baidu",
  Adm = "adm"
}

/**
 * Defines values for PlatformType. \
 * {@link KnownPlatformType} can be used interchangeably with PlatformType,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **apns** \
 * **wns** \
 * **gcm** \
 * **baidu** \
 * **adm**
 */
export type PlatformType = string;

/** Known values of {@link InstallationPatchType} that the service accepts. */
export enum KnownInstallationPatchType {
  Add = "add",
  Remove = "remove",
  Replace = "replace"
}

/**
 * Defines values for InstallationPatchType. \
 * {@link KnownInstallationPatchType} can be used interchangeably with InstallationPatchType,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **add** \
 * **remove** \
 * **replace**
 */
export type InstallationPatchType = string;

/** Known values of {@link FormatParameterType} that the service accepts. */
export enum KnownFormatParameterType {
  Apple = "apple",
  Baidu = "baidu",
  Gcm = "gcm",
  Windows = "windows"
}

/**
 * Defines values for FormatParameterType. \
 * {@link KnownFormatParameterType} can be used interchangeably with FormatParameterType,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **apple** \
 * **baidu** \
 * **gcm** \
 * **windows**
 */
export type FormatParameterType = string;

/** Known values of {@link ApiVersionType} that the service accepts. */
export enum KnownApiVersionType {
  TwoThousandFifteen01 = "2015-01",
  TwoThousandFifteen04 = "2015-04",
  TwoThousandFifteen08 = "2015-08",
  TwoThousandSixteen07 = "2016-07",
  TwoThousandTwenty06 = "2020-06"
}

/**
 * Defines values for ApiVersionType. \
 * {@link KnownApiVersionType} can be used interchangeably with ApiVersionType,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **2015-01** \
 * **2015-04** \
 * **2015-08** \
 * **2016-07** \
 * **2020-06**
 */
export type ApiVersionType = string;

/** Optional parameters. */
export interface DeleteNotificationHubOptionalParams
  extends coreClient.OperationOptions {}

/** Optional parameters. */
export interface GetNotificationHubOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the getNotificationHub operation. */
export type GetNotificationHubResponse = NotificationHubEntryModel;

/** Optional parameters. */
export interface CreateOrUpdateNotificationHubOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the createOrUpdateNotificationHub operation. */
export type CreateOrUpdateNotificationHubResponse = NotificationHubEntryModel;

/** Optional parameters. */
export interface GetRegistrationsByTagOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the getRegistrationsByTag operation. */
export type GetRegistrationsByTagResponse = NotificationHubsClientGetRegistrationsByTagHeaders &
  RegistrationEntryModel[];

/** Optional parameters. */
export interface CreateRegistrationIdOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the createRegistrationId operation. */
export type CreateRegistrationIdResponse = NotificationHubsClientCreateRegistrationIdHeaders;

/** Optional parameters. */
export interface GetRegistrationsOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the getRegistrations operation. */
export type GetRegistrationsResponse = NotificationHubsClientGetRegistrationsHeaders &
  RegistrationEntryModel[];

/** Optional parameters. */
export interface CreateRegistrationOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the createRegistration operation. */
export type CreateRegistrationResponse = NotificationHubsClientCreateRegistrationHeaders &
  RegistrationEntryModel;

/** Optional parameters. */
export interface DeleteRegistrationOptionalParams
  extends coreClient.OperationOptions {}

/** Optional parameters. */
export interface GetRegistrationOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the getRegistration operation. */
export type GetRegistrationResponse = NotificationHubsClientGetRegistrationHeaders &
  RegistrationEntryModel;

/** Optional parameters. */
export interface CreateOrUpdateRegistrationOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the createOrUpdateRegistration operation. */
export type CreateOrUpdateRegistrationResponse = NotificationHubsClientCreateOrUpdateRegistrationHeaders &
  RegistrationEntryModel;

/** Optional parameters. */
export interface DeleteInstallationOptionalParams
  extends coreClient.OperationOptions {}

/** Optional parameters. */
export interface GetInstallationOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the getInstallation operation. */
export type GetInstallationResponse = NotificationHubsClientGetInstallationHeaders &
  InstallationModel;

/** Optional parameters. */
export interface PatchInstallationOptionalParams
  extends coreClient.OperationOptions {}

/** Optional parameters. */
export interface CreateOrUpdateInstallationOptionalParams
  extends coreClient.OperationOptions {}

/** Optional parameters. */
export interface SendMessage$binaryOptionalParams
  extends coreClient.OperationOptions {}

/** Optional parameters. */
export interface SendMessage$jsonOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the sendMessage operation. */
export type SendMessageResponse = NotificationHubsClientSendMessageHeaders;

/** Optional parameters. */
export interface NotificationHubsClientOptionalParams
  extends coreClient.ServiceClientOptions {
  /** Api Version */
  apiVersion?: string;
  /** ETag as returned by creation, update, and retrieval, or * (overwrite). */
  ifMatch?: string;
  /** Contains the token to continue the enumeration of registrations, in case there are more. */
  continuationToken?: string;
  /** OData top parameter */
  top?: string;
  /** OData filter parameter */
  filter?: string;
  /** Device handle for the PNS */
  serviceBusNotificationDeviceHandle?: string;
  /** Notification message tags for targeting */
  serviceBusNotificationTags?: string;
  /** Direct Send */
  direct?: boolean;
  /** The apns-topic header */
  apnsTopic?: string;
  /** The apns-priority header */
  apnsPriority?: string;
  /** The apns-push-type header */
  apnsPushType?: string;
  /**  X-WNS-Cache-Policy header parameter */
  xWNSCachePolicy?: string;
  /** X-WNS-PRIORITY header parameter */
  xWNSPriority?: string;
  /** X-WNS-RequestForStatus header parameter */
  xWNSRequestForStatus?: string;
  /** X-WNS-Tag header parameter */
  xWNSTag?: string;
  /** X-WNS-TTL header parameter */
  xWnsttl?: string;
  /** X-WNS-Type header parameter */
  xWNSType?: string;
  /** Overrides client endpoint. */
  endpoint?: string;
}
