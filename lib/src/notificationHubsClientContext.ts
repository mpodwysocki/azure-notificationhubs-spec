/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import * as coreClient from "@azure/core-client";
import * as coreAuth from "@azure/core-auth";
import { Enum0, Enum1, NotificationHubsClientOptionalParams } from "./models";

export class NotificationHubsClientContext extends coreClient.ServiceClient {
  hubName: string;
  xMsVersion: Enum0;
  authorization: string;
  serviceBusNotificationDeviceHandle?: string;
  serviceBusNotificationFormat: Enum1;
  serviceBusNotificationTags?: string;
  apiVersion: string;
  direct?: boolean;

  /**
   * Initializes a new instance of the NotificationHubsClientContext class.
   * @param credentials Subscription credentials which uniquely identify client subscription.
   * @param hubName Notification Hub Name
   * @param xMsVersion API Version
   * @param authorization Authorization Header value
   * @param serviceBusNotificationFormat Platform type for the notification
   * @param options The parameter options
   */
  constructor(
    credentials: coreAuth.TokenCredential,
    hubName: string,
    xMsVersion: Enum0,
    authorization: string,
    serviceBusNotificationFormat: Enum1,
    options?: NotificationHubsClientOptionalParams
  ) {
    if (credentials === undefined) {
      throw new Error("'credentials' cannot be null");
    }
    if (hubName === undefined) {
      throw new Error("'hubName' cannot be null");
    }
    if (xMsVersion === undefined) {
      throw new Error("'xMsVersion' cannot be null");
    }
    if (authorization === undefined) {
      throw new Error("'authorization' cannot be null");
    }
    if (serviceBusNotificationFormat === undefined) {
      throw new Error("'serviceBusNotificationFormat' cannot be null");
    }

    // Initializing default values for options
    if (!options) {
      options = {};
    }
    const defaults: NotificationHubsClientOptionalParams = {
      requestContentType: "application/json; charset=utf-8",
      credential: credentials
    };

    const packageDetails = `azsdk-js-notificationhubs/7.0.0`;
    const userAgentPrefix =
      options.userAgentOptions && options.userAgentOptions.userAgentPrefix
        ? `${options.userAgentOptions.userAgentPrefix} ${packageDetails}`
        : `${packageDetails}`;

    const optionsWithDefaults = {
      ...defaults,
      ...options,
      userAgentOptions: {
        userAgentPrefix
      },
      baseUri: options.endpoint || "{namespaceBaseUrl}"
    };
    super(optionsWithDefaults);
    // Parameter assignments
    this.hubName = hubName;
    this.xMsVersion = xMsVersion;
    this.authorization = authorization;
    this.serviceBusNotificationFormat = serviceBusNotificationFormat;

    // Assigning values to Constant parameters
    this.apiVersion = options.apiVersion || "2020-06-01";
  }
}
